devtools::document()
library(workr)
workr::run_data_wrangling()
library(workr)
remove.packages("workr")
devtools::install_github("https://github.com/connor-french/workr.git")
devtools::install_github("https://github.com/connor-french/workr.git")
install.packages("callr")
install.packages("callr")
devtools::install_github("https://github.com/connor-french/workr.git")
workr::run_data_wrangling()
vignette(workr)
vignette("workr")
vignette(package = "workr")
spotify <- read_csv("data.csv")
spotify <- read_csv("inst/tutorials/data.csv")
spotify <- read_csv("/inst/tutorials/data.csv")
spotify <- read_csv("inst/tutorials/data-wrangling/data.csv")
saveRDS(spotify, file = "data/spotify.rds")
library(workr)
library(workr)
data(spotify)
spotify
library(workr)
spotify
data(spotify)
spotify <- read_csv("inst/tutorials/data-wrangling/data.csv")
spotify <- readr::read_csv("inst/tutorials/data-wrangling/data.csv")
save(spotify, file = "data/spotify.rda")
library(workr)
data("spotify")
spotify
library(workr)
run_data_wrangling()
devtools::build_vignettes()
library(workr)
vignette(package = "workr")
vignette("intro_to_R")
vignette("intro_to_R.R")
vignette("intro_to_R.html")
devtools::install_github("https://github.com/connor-french/workr.git", build_vignettes = TRUE)
vignette(package = "workr")
vignette("intro_to_R")
vignette("preworkshop_instructions")
devtools::install_github("https://github.com/connor-french/workr.git", build_vignettes = TRUE)
library(workr)
workr::run_data_wrangling()
install.packages("learnr")
install.packages("babynames")
data("spotify")
spotify
library(babynames)
data("babynames")
babynames
install.packages(c("janitor", "leaflet"))
source('~/Dropbox/Old_Mac/School_Stuff/CUNY/Frog-life-history-project/phyllomedusa_exploration.R', echo=TRUE)
source('~/Dropbox/Old_Mac/School_Stuff/CUNY/Frog-life-history-project/phyllomedusa_exploration.R', echo=TRUE)
?print
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
writeLines(
"Which of these is *not* a way to select only the `loudness` and `danceability` columns together?\n   1) select(spotify, -c(genre, energy, tempo))\n   2) select(spotify, loudness:danceability)\n   3) select(spotify, contains(\"d\"))\n   4) select(spotify, one_of(c(\"loudness\", \"danceability\", \"speed\")"
)
knitr::opts_chunk$set(echo = FALSE)
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
here::here()
devtools::install_github("yihui/xaringan")
xaringan:::inf_mr()
xaringan:::inf_mr()
2 + 2
?xaringan::moon_reader
# create the full path
df_path <- paste(data_dir, file_name, sep = "/")
# assign the data directory
data_dir <- here("data")
# name the file
file_name <- "starwars_raw.csv"
# create the full path
df_path <- paste(data_dir, file_name, sep = "/")
# assign the data directory
data_dir <- here("data")
# name the file
file_name <- "starwars_raw.csv"
# concatenate the two strings together
df_path <- paste(data_dir, file_name, sep = "/")
starwars_sum <- starwars_df %>%
filter(!is.na(species),!is.na(mass)) %>% # remove missing values
group_by(species) %>%
filter(n() > 1) %>% # filter out species that don't have more than one record
summarise(
avg_mass = mean(mass),
max_mass = max(mass),
min_mass = min(mass),
sd_mass = sd(mass),
n_ind = n()
) %>%
ungroup()
# print the new data frame
starwars_sum
starwars_df <- dplyr::starwars
starwars_sum <- starwars_df %>%
filter(!is.na(species),!is.na(mass)) %>% # remove missing values
group_by(species) %>%
filter(n() > 1) %>% # filter out species that don't have more than one record
summarise(
avg_mass = mean(mass),
max_mass = max(mass),
min_mass = min(mass),
sd_mass = sd(mass),
n_ind = n()
) %>%
ungroup()
# print the new data frame
starwars_sum
library(learnr)
library(tidyverse)
starwars_sum <- starwars_df %>%
filter(!is.na(species),!is.na(mass)) %>% # remove missing values
group_by(species) %>%
filter(n() > 1) %>% # filter out species that don't have more than one record
summarise(
avg_mass = mean(mass),
max_mass = max(mass),
min_mass = min(mass),
sd_mass = sd(mass),
n_ind = n()
) %>%
ungroup()
# print the new data frame
starwars_sum
starwars_sum %>%
mutate(species = fct_reorder(species, n_ind)) %>% # order species by numeric variable
ggplot(aes(x = species, y = n_ind)) +
geom_col() +
coord_flip() +
theme_minimal()
starwars_sum %>%
mutate(species = fct_reorder(species, avg_mass)) %>% # order species by numeric variable
ggplot(aes(x = species, y = avg_mass)) +
geom_col() +
coord_flip() +
theme_minimal()
starwars_sum
starwars_sum %>%
mutate(species = fct_reorder(species, max_mass)) %>% # order species by numeric variable
ggplot(aes(x = species, y = max_mass)) +
geom_col() +
coord_flip() +
theme_minimal()
starwars_sum %>%
mutate(species = fct_reorder(species, min_mass)) %>% # order species by numeric variable
ggplot(aes(x = species, y = min_mass)) +
geom_col() +
coord_flip() +
theme_minimal()
starwars_sum %>%
mutate(species = fct_reorder(species, sd_mass)) %>% # order species by numeric variable
ggplot(aes(x = species, y = sd_mass)) +
geom_col() +
coord_flip() +
theme_minimal()
?ggsave
Sys.info()
Sys.getenv()
sessionInfo
sessionInfo()
?sessionInfo
toLatex(sessionInfo)
toLatex(sessionInfo())
write_lines(sessionInfo(), "~/Desktop/sessinfo.txt")
library(workr)
detach("package:workr", unload = TRUE)
devtools::install_github("natalieoshea/workr")
devtools::install_github("natalieoshea/workr")
install.packages("prettyunits")
install.packages("prettyunits")
devtools::install_github("natalieoshea/workr")
library(workr)
source('~/Dropbox/Old_Mac/School_Stuff/CUNY/GCDI/workr/R/run_repro_analysis.R', echo=TRUE)
library(workr)
run_repro_analysis()
devtools::install_github("natalieoshea/workr")
run_repro_analysis()
devtools::install_github("natalieoshea/workr")
devtools::install_github("natalieoshea/workr")
